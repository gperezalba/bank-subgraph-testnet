specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: IdentityFactory
    network: mainnet
    source:
      address: "0x56dF004138fF2488A8D1f1Bc31ffcaCC88F9c462"
      abi: IdentityFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - DeployIdentity
      abis:
        - name: IdentityFactory
          file: ./abis/IdentityFactory.json
      eventHandlers:
        - event: DeployIdentity(indexed address,indexed address,address,indexed address,string,bytes32)
          handler: handleDeployIdentity
      file: ./src/identityFactory.ts
  - kind: ethereum/contract
    name: NameService
    network: mainnet
    source:
      address: "0xD0a2e5D3b8c6CF11db4DaBf6f8A702E60A098233"
      abi: NameService
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CreateName
        - ChangeWallet
        - ChangeOwner
      abis:
        - name: NameService
          file: ./abis/NameService.json
      eventHandlers:
        - event: CreateName(string,indexed address,indexed address)
          handler: handleCreateName
        - event: ChangeWallet(string,indexed address)
          handler: handleChangeWallet
        - event: ChangeOwner(string,indexed address)
          handler: handleChangeOwner
      file: ./src/nameService.ts
  # - kind: ethereum/contract
  #   name: Controller
  #   network: mainnet
  #   source:
  #     address: "0x0ff3Cd14bA715da75608C4aa56B95F2e86B2037d"
  #     abi: Controller
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.3
  #     language: wasm/assemblyscript
  #     entities:
  #       - NewToken
  #     abis:
  #       - name: Controller
  #         file: ./abis/Controller.json
  #       - name: Token
  #         file: ./abis/Token.json
  #     eventHandlers:
  #       - event: NewToken(address)
  #         handler: handleTokenCreated
  #     file: ./src/controller.ts
  # - kind: ethereum/contract
  #   name: Balance
  #   network: mainnet
  #   source:
  #     address: "0xD474378e5FcF23f498c433C7352394aD51A4CfE4"
  #     abi: Balance
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.3
  #     language: wasm/assemblyscript
  #     entities:
  #       - Token
  #     abis:
  #       - name: Balance
  #         file: ./abis/Balance.json
  #     callHandlers:
  #       - function: f()
  #         handler: handleGetBalance
  #     file: ./src/balance.ts
templates:
  - name: Token
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Token
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/token.ts
      entities:
        - Transfer
      abis:
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256,indexed bytes)
          handler: handleTransfer
  - name: Wallet
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Wallet
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/wallet.ts
      entities:
        - Transfer
      abis:
        - name: Wallet
          file: ./abis/Wallet.json
      eventHandlers:
        - event: Transfer(indexed address,indexed uint256,indexed address,uint256,uint256,bytes)
          handler: handleTransfer
  - name: Identity
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Identity
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/identity.ts
      entities:
        - Identity
      abis:
        - name: Identity
          file: ./abis/Identity.json
      eventHandlers:
        - event: Forward(indexed address,uint256,bytes)
          handler: handleForward
        - event: FactoryForward(indexed uint256,address)
          handler: handleFactoryForward
        - event: NewOwner(address,address,address)
          handler: handleIdentityNewOwner
        - event: NewRecovery(address,address)
          handler: handleIdentityNewRecovery
        - event: NewWallet(address,address,address)
          handler: handleIdentityNewWallet